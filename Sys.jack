// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
        do Memory.init();
        do Math.init();
        do Screen.init();
        do Output.init();
        do Keyboard.init();
        
        do Main.main();
        do Sys.halt();
		
		return;
    }

    /** Halts the program execution. */
    function void halt() {
        while(true) {}
        
        return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
        var int i, j, k, l, m, n, o, p, q, r, s, t, u, v;
        
        while(i < duration) {
            while (j < 32000) {
                let j = j + 1;
            }
			while (k < 32000) {
                let k = k + 1;
            }
			while (l < 32000) {
                let l = l + 1;
            }
			while (m < 32000) {
                let m = m + 1;
            }
			while (n < 32000) {
                let n = n + 1;
            }
			while (o < 32000) {
                let o = o + 1;
            }
			while (p < 32000) {
                let p = p + 1;
            }
			while (q < 32000) {
                let q = q + 1;
            }
			while (r < 32000) {
                let r = r + 1;
            }
			while (s < 32000) {
                let s = s + 1;
            }
			while (t < 32000) {
                let t = t + 1;
            }
			while (u < 32000) {
                let u = u + 1;
            }
			while (v < 32000) {
                let v = v + 1;
            }
            let i = i + 1;
        }
        
        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
        do Output.printString("Err");
        do Output.printInt(errorCode);
        
        do Sys.halt();
        
        return;
    }
}
